module_name: Vertiq IO
serial_config:
    - command: vertiq_io telemetry ${SERIAL_DEV}
      port_config_param:
        name: VERTIQ_IO_CFG
        group: Vertiq IO

actuator_output:
  output_groups:
    - param_prefix: VERTIQ_IO
      group_label: 'ESCs'
      channel_label: 'ESC'
      standard_params:
        min: { min: 0, max: 65535, default: 1 }
        max: { min: 0, max: 65535, default: 65535 }
        failsafe: { min: 0, max: 500 }
      num_channels: 16

parameters:
    - group: Vertiq IO
      definitions:
        VERTIQ_ENABLE:
            description:
                short: Enable the IQUART driver
                long: |
                    Determine whether or not to enable the IQUART driver. If this value is greater than 0, the driver is enabled.
            type: int32
            default: 1
        VERTIQ_BAUD:
            description:
                short: The IQUART driver's baud rate
                long: |
                    The baud rate (in bits per second) used by the serial port connected with IQUART communication
            type: int32
            default: 115200
            reboot_required: true
        VERTIQ_NUM_CVS:
            description:
              short: The number of Vertiq IFCI parameters to use
              long: |
                  The total number of IFCI control variables being used across all connected modules
            type: int32
            default: 0
            min: 0
            max: 16
            reboot_required: true
        VERTIQ_TEL_MSK:
            description:
              short: Motor telemetry bitmask
              long: |
                  Determines which modules the flight controller will ask for telemetry. Each position in the bitmask represents a Module ID. For example, setting bit
                  0 means that the flight controller will request telemetry from Modlue ID 0.
            type: int32
            default: 0
            min: 0
            max: 65535
            reboot_required: true
        DISARM_BEHAVE:
            description:
                short: The triggered behavior on PX4 disarm
                long: |
                    The behavior triggered when the flight controller disarms. You have the option to trigger your motors' disarm behaviors, set all motors to coast,
                    or set a predefined throttle setpoint
            type: enum
            values:
                0: Trigger Motor Disarm Behavior
                1: Coast Motors
                2: Set Predefined Setpoint
            default: 0
        DISARM_THROTTLE:
            description:
                short: The throttle value sent to the motors when DISARM_BEHAVE is set to Set Predefined Setpoint
                long: This is the throttle that will be sent to all motors when PX4 is disarmed and DISARM_BEHAVE is Set Predefined Setpoint
            type: int32
            default: 0
            min: 0
            max: 65535
        ARMING_BEHAVE:
            description:
                short: The triggered behavior on PX4 arm
                long: |
                    The behavior triggered when the flight controller arms. You have the option to use your motors' arming behaviors, or to force all of your motors to arm
            type: enum
            values:
                0: Use Motor Arm Behavior
                1: Force Arming
            default: 0
        MODULE_ID:
            description:
                short: The module's Module ID
                long: |
                    Module ID words that mean things
            type: int32
            reboot_required: true
        # OBJECT_ID:
        #     description:
        #         short: The target module's Module ID
        #         long: |
        #             Object ID words that mean things
        #     type: int32
        #     reboot_required: true
    - group: IFCI Configuration
      definitions:
        THROTTLE_CVI:
            description:
                short: The module's firmware version
                long: |
                    firmware version words that mean things
            type: int32
        CONTROL_MODE:
            description:
                short: The module's firmware version
                long: |
                    firmware version words that mean things
            type: enum
            values:
                0: PWM
                1: Voltage
                2: Velocity
        MAX_VELOCITY:
            description:
                short: The module's firmware version
                long: |
                    firmware version words that mean things
            type: float
        MAX_VOLTS:
            description:
                short: The module's firmware version
                long: |
                    firmware version words that mean things
            type: float
        # X_CVI:
        #     description:
        #         short: The module's firmware version
        #         long: |
        #             firmware version words that mean things
        #     type: int32
        # Y_CVI:
        #     description:
        #         short: The module's firmware version
        #         long: |
        #             firmware version words that mean things
        #     type: int32
    # - group: Vertiq System Control Client
    #   definitions:
    #     DEVICE_ID:
    #         description:
    #             short: The module's Module ID
    #             long: |
    #                 Module ID words that mean things
    #         type: int32
    #     REV_ID:
    #         description:
    #             short: The module's firmware version
    #             long: |
    #                 firmware version words that mean things
    #         type: int32
    #     HARDWARE_VERSION:
    #         description:
    #             short: The module's hardware version
    #             long: |
    #                 hardware version words that mean things
    #         type: int32
    #     UID1:
    #         description:
    #             short: The module's Module ID
    #             long: |
    #                 Module ID words that mean things
    #         type: int32
    #     UID2:
    #         description:
    #             short: The module's firmware version
    #             long: |
    #                 firmware version words that mean things
    #         type: int32
    #     UID3:
    #         description:
    #             short: The module's hardware version
    #             long: |
    #                 hardware version words that mean things
    #         type: int32
    #     MEM_SIZE:
    #         description:
    #             short: The module's Module ID
    #             long: |
    #                 Module ID words that mean things
    #         type: int32
    #     BUILD_YEAR:
    #         description:
    #             short: The module's firmware version
    #             long: |
    #                 firmware version words that mean things
    #         type: int32
    #     BUILD_MONTH:
    #         description:
    #             short: The module's hardware version
    #             long: |
    #                 hardware version words that mean things
    #         type: int32
    #     BUILD_DAY:
    #         description:
    #             short: The module's Module ID
    #             long: |
    #                 Module ID words that mean things
    #         type: int32
    #     BUILD_HOUR:
    #         description:
    #             short: The module's firmware version
    #             long: |
    #                 firmware version words that mean things
    #         type: int32
    #     BUILD_MIN:
    #         description:
    #             short: The module's hardware version
    #             long: |
    #                 hardware version words that mean things
    #         type: int32
    #     BUILD_SEC:
    #         description:
    #             short: The module's Module ID
    #             long: |
    #                 Module ID words that mean things
    #         type: int32
    #     MODULE_ID:
    #         description:
    #             short: The module's firmware version
    #             long: |
    #                 firmware version words that mean things
    #         type: int32
    #     MODULE_TIME:
    #         description:
    #             short: The module's hardware version
    #             long: |
    #                 hardware version words that mean things
    #         type: float
    #     FIRMWARE_VERSION:
    #         description:
    #             short: The module's Module ID
    #             long: |
    #                 Module ID words that mean things
    #         type: int32
    #     HARDWARE_VERSION:
    #         description:
    #             short: The module's firmware version
    #             long: |
    #                 firmware version words that mean things
    #         type: int32
    #     ELEC_VERSION:
    #         description:
    #             short: The module's hardware version
    #             long: |
    #                 hardware version words that mean things
    #         type: int32
    #     FIRMWARE_VALID:
    #         description:
    #             short: The module's Module ID
    #             long: |
    #                 Module ID words that mean things
    #         type: int32
    #     APPS_PRESENT:
    #         description:
    #             short: The module's firmware version
    #             long: |
    #                 firmware version words that mean things
    #         type: int32
        # BOOT_VERSION:
        #     description:
        #         short: The module's hardware version
        #         long: |
        #             hardware version words that mean things
        #     type: int32
        # UPGRADE_VERSION:
        #     description:
        #         short: The module's Module ID
        #         long: |
        #             Module ID words that mean things
        #     type: int32
        # SYS_CLOCK:
        #     description:
        #         short: The module's firmware version
        #         long: |
        #             firmware version words that mean things
        #     type: int32
        # CTRL_FLAGS:
        #     description:
        #         short: The module's hardware version
        #         long: |
        #             hardware version words that mean things
        #     type: int32
        # PCB_VERSION:
        #     description:
        #         short: The module's Module ID
        #         long: |
        #             Module ID words that mean things
        #     type: int32
